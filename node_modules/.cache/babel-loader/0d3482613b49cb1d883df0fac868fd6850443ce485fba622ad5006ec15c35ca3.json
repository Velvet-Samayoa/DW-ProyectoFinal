{"ast":null,"code":"var _jsxFileName = \"F:\\\\UNIVERSIDAD\\\\8vo semestre\\\\Desarrollo Web\\\\Examen Final\\\\Proyecto\\\\react-firebase-images-gallery-complete-project\\\\src\\\\components\\\\user\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { Google } from '@mui/icons-material';\nimport { Button, DialogActions, DialogContent, DialogContentText } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useRef } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport EmailField from './inputs/EmailField';\nimport PasswordField from './inputs/PasswordField';\nimport SubmitButton from './inputs/SubmitButton';\nimport ResetPassword from './ResetPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n  const [isRegister, setIsRegister] = useState(false);\n  const {\n    modal,\n    setModal,\n    signUp,\n    login,\n    loginWithGoogle,\n    setAlert,\n    setLoading\n  } = useAuth();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    if (isRegister) {\n      const confirmPassword = confirmPasswordRef.current.value;\n      try {\n        if (password !== confirmPassword) {\n          throw new Error(\"Passwords don't match\");\n        }\n        await signUp(email, password);\n        setModal({\n          ...modal,\n          isOpen: false\n        });\n      } catch (error) {\n        setAlert({\n          isAlert: true,\n          severity: 'error',\n          message: error.message,\n          timeout: 5000,\n          location: 'modal'\n        });\n        console.log(error);\n      }\n    } else {\n      try {\n        await login(email, password);\n        setModal({\n          ...modal,\n          isOpen: false\n        });\n      } catch (error) {\n        setAlert({\n          isAlert: true,\n          severity: 'error',\n          message: error.message,\n          timeout: 5000,\n          location: 'modal'\n        });\n        console.log(error);\n      }\n    }\n    setLoading(false);\n  };\n  const handleGoogleLogin = async () => {\n    try {\n      await loginWithGoogle();\n      setModal({\n        ...modal,\n        isOpen: false\n      });\n    } catch (error) {\n      setAlert({\n        isAlert: true,\n        severity: 'error',\n        message: error.message,\n        timeout: 5000,\n        location: 'modal'\n      });\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    if (isRegister) {\n      setModal({\n        ...modal,\n        title: 'Register'\n      });\n    } else {\n      setModal({\n        ...modal,\n        title: 'Login'\n      });\n    }\n  }, [isRegister]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Please enter your email and your password here:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmailField, {\n          emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PasswordField, {\n          passwordRef,\n          autoFocus: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), isRegister && /*#__PURE__*/_jsxDEV(PasswordField, {\n          passwordRef: confirmPasswordRef,\n          id: 'confirmPassword',\n          label: 'Confirm Password',\n          autoFocus: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          justifyContent: 'space-between',\n          px: '19px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: () => setModal({\n            ...modal,\n            title: 'Reset Password',\n            content: /*#__PURE__*/_jsxDEV(ResetPassword, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 26\n            }, this)\n          }),\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        justifyContent: 'left',\n        p: '5px 24px'\n      },\n      children: [isRegister ? 'Do you have an account? Sign in now' : \"Don't you have an account? Create one now\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsRegister(!isRegister),\n        children: isRegister ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        justifyContent: 'center',\n        py: '24px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(Google, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 22\n        }, this),\n        onClick: handleGoogleLogin,\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"UT9CNXyJ/P63WSw5b/e6VhAmmzM=\", false, function () {\n  return [useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Google","Button","DialogActions","DialogContent","DialogContentText","useEffect","useState","useRef","useAuth","EmailField","PasswordField","SubmitButton","ResetPassword","Login","emailRef","passwordRef","confirmPasswordRef","isRegister","setIsRegister","modal","setModal","signUp","login","loginWithGoogle","setAlert","setLoading","handleSubmit","e","preventDefault","email","current","value","password","confirmPassword","Error","isOpen","error","isAlert","severity","message","timeout","location","console","log","handleGoogleLogin","title","autoFocus","id","label","justifyContent","px","content","p","py"],"sources":["F:/UNIVERSIDAD/8vo semestre/Desarrollo Web/Examen Final/Proyecto/react-firebase-images-gallery-complete-project/src/components/user/Login.js"],"sourcesContent":["import { Google } from '@mui/icons-material';\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useRef } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport EmailField from './inputs/EmailField';\nimport PasswordField from './inputs/PasswordField';\nimport SubmitButton from './inputs/SubmitButton';\nimport ResetPassword from './ResetPassword';\n\nconst Login = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n\n  const [isRegister, setIsRegister] = useState(false);\n  const {\n    modal,\n    setModal,\n    signUp,\n    login,\n    loginWithGoogle,\n    setAlert,\n    setLoading,\n  } = useAuth();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    if (isRegister) {\n      const confirmPassword = confirmPasswordRef.current.value;\n      try {\n        if (password !== confirmPassword) {\n          throw new Error(\"Passwords don't match\");\n        }\n        await signUp(email, password);\n        setModal({ ...modal, isOpen: false });\n      } catch (error) {\n        setAlert({\n          isAlert: true,\n          severity: 'error',\n          message: error.message,\n          timeout: 5000,\n          location: 'modal',\n        });\n        console.log(error);\n      }\n    } else {\n      try {\n        await login(email, password);\n        setModal({ ...modal, isOpen: false });\n      } catch (error) {\n        setAlert({\n          isAlert: true,\n          severity: 'error',\n          message: error.message,\n          timeout: 5000,\n          location: 'modal',\n        });\n        console.log(error);\n      }\n    }\n    setLoading(false);\n  };\n\n  const handleGoogleLogin = async () => {\n    try {\n      await loginWithGoogle();\n      setModal({ ...modal, isOpen: false });\n    } catch (error) {\n      setAlert({\n        isAlert: true,\n        severity: 'error',\n        message: error.message,\n        timeout: 5000,\n        location: 'modal',\n      });\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (isRegister) {\n      setModal({ ...modal, title: 'Register' });\n    } else {\n      setModal({ ...modal, title: 'Login' });\n    }\n  }, [isRegister]);\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <DialogContent dividers>\n          <DialogContentText>\n            Please enter your email and your password here:\n          </DialogContentText>\n          <EmailField {...{ emailRef }} />\n          <PasswordField {...{ passwordRef, autoFocus: false }} />\n          {isRegister && (\n            <PasswordField\n              {...{\n                passwordRef: confirmPasswordRef,\n                id: 'confirmPassword',\n                label: 'Confirm Password',\n                autoFocus: false,\n              }}\n            />\n          )}\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'space-between', px: '19px' }}>\n          <Button\n            size=\"small\"\n            onClick={() =>\n              setModal({\n                ...modal,\n                title: 'Reset Password',\n                content: <ResetPassword />,\n              })\n            }\n          >\n            Forgot Password?\n          </Button>\n          <SubmitButton />\n        </DialogActions>\n      </form>\n      <DialogActions sx={{ justifyContent: 'left', p: '5px 24px' }}>\n        {isRegister\n          ? 'Do you have an account? Sign in now'\n          : \"Don't you have an account? Create one now\"}\n        <Button onClick={() => setIsRegister(!isRegister)}>\n          {isRegister ? 'Login' : 'Register'}\n        </Button>\n      </DialogActions>\n      <DialogActions sx={{ justifyContent: 'center', py: '24px' }}>\n        <Button\n          variant=\"outlined\"\n          startIcon={<Google />}\n          onClick={handleGoogleLogin}\n        >\n          Login with Google\n        </Button>\n      </DialogActions>\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}